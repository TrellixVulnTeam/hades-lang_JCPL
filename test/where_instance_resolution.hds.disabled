
def main(): Void {
    requires_I(10);
    requires_I(true);
    requires_I(Box(10));
    requires_I(Box(true));
}

def requires_I[T](value: T): Void where(I_T: I[T]) {
}

implementation I_Bool : I[Bool] {
}

implementation I_Box[T] : I[Box[T]] where(I_T: I[T]) {
}
struct Box[T] {
    val value: T;
}
interface I[This] {}