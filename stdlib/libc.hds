
extern def puts(*Byte): Void = puts;
extern def exit(CInt): Void = exit;
extern def malloc(Size): *mut Void = __hds_malloc;
extern def free(*mut Void): Void = __hds_free;
extern def strlen(*Byte): Size = strlen;
extern def memcpy(*Byte, *Byte, Size): Void = memcpy;
extern def strlen(*Byte): Size = strlen;
/// we don't have variadics right now
/// there isn't a better way to type this
extern def fprintf(*File, *Byte, *Byte): Size = fprintf;
extern def printf(*Byte, *Byte): Size = printf;
extern def sleep(Size): Size = sleep;

struct Dir {}
struct dirent {
    val d_name: *Byte;
}
struct File {}

extern def opendir(*Byte): *Dir = opendir;
extern def closedir(*Dir): Void = closedir;
extern def readdir(*Dir): *dirent = readdir;
extern def getline(*mut *mut Byte, *mut Size, *File): Size = getline;
extern def fgetc(*File): Byte = fgetc;
extern def strtoul(*Byte, **Byte, CInt): Size = strtoul;

extern def hdc_dirent_name(*dirent): *Byte = hdc_dirent_name;
extern def hdc_dirent_is_directory(*dirent): Bool = hdc_dirent_is_directory;

def name(this: *dirent): *Byte {
    return hdc_dirent_name(this);
}

def is_directory(this: *dirent): Bool {
    return hdc_dirent_is_directory(this);
}

extern def fread(*Void, Size, Size, *File): Size = fread;

