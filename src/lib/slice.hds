import libc as c;

struct t[T] {
    val m_buffer: *mut T;
    val m_size: Size;
}

def size[T](this: t[T]): Size {
    return this.m_size;
}

def buffer[T](this: t[T]): *mut T {
    return this.m_buffer;
}

def alloc[T](size: Size): t[T] {
    return t[T](pointer_cast[T](c.malloc(size * size_of[T])), size);
}

def drop[T](this: t[T]): Void {
    c.free(pointer_cast[Void](this.buffer()));
}

