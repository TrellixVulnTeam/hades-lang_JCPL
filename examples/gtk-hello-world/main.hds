import gtk as Gtk;
import libc as c;
import libc.{exit};

def main(argc: i32, argv: **Byte): Void {
  val app = Gtk.application_new(b"org.gtk.example", Gtk.APPLICATION_FLAGS_NONE);
  val status = run(app, argc, argv);

  exit(status);
}


def run(app: *Gtk.Application, argc: i32, argv: **Byte): i32 {
  Gtk.signal_connect(app.as_widget(), b"activate", Gtk.CALLBACK(on_app_activate), nullptr);
  return Gtk.application_run(app, argc, argv);
}

def exit_button_on_click(button: *Gtk.Button, window: *Gtk.Window): Void {
  Gtk.print(b"Destroying window\n");
  Gtk.widget_destroy(window);
}

def on_app_activate(app: *Gtk.Application, data: *Void): Void {
  val window = make_window(app);
  window.as_widget().show_all();
}

def make_window(app: *Gtk.Application): *Gtk.Window {
  val window = app.new_window()
    .set_title(b"Window")
    .set_default_size(200, 200);

//   button_box = gtk_button_box_new (GTK_ORIENTATION_HORIZONTAL);
  window.as_container().add(
    Gtk.button_box_new().as_container()
      .add(
        Gtk.button_new_with_label(b"Exit")
            .connect(b"clicked", Gtk.CALLBACK(exit_button_on_click), pointer_cast[Void](window))
      )
  );

  return window;
}
