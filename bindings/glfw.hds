
struct Window {}
struct Monitor {}

extern def init(): CInt = glfwInit;
extern def terminate(): Void = glfwTerminate;
extern def create_window(CInt, CInt, *Byte, *Monitor, *Window): *Window = glfwCreateWindow;
extern def make_context_current(*Window): Void = glfwMakeContextCurrent;
extern def window_should_close(*Window): Bool = glfwWindowShouldClose;
extern def window_swap_buffers(*Window): Void = glfwSwapBuffers;
extern def wait_events(): Void = glfwWaitEvents;

def should_close(this: *Window): Bool {
    return window_should_close(this);
}

def swap_buffers(this: *Window): Void {
    window_swap_buffers(this);
}

